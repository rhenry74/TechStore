
@page "/product/{productId}/view"
@inject HttpClient http
@inject NavigationManager navigation

@if (product == null)
{
    <p>Loading...</p>
}
else
{
    

}

@code {

    private bool showFileModal;

    private ArtifactFileInfo artifactInfo = new ArtifactFileInfo();

    private Product product;

    [Parameter] public string ProductId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ProductId == "x")
        {
            product = new Product();
        }
        else
        {
            var products = await http.GetFromJsonAsync<IEnumerable<Product>>("api/products");
            product = products.First(p => p.id == ProductId);
        }
    }

    private void AddBullit()
    {
        var newBullit = new Bullit();
        newBullit.Order = product.Bullits.Count() + 1;
        product.Bullits.Add(newBullit);
    }

    private void DeleteBullit(Bullit bullit)
    {
        product.Bullits.Remove(bullit);
    }

    private void AddArtifact()
    {
        var item = new Artifact();
        item.Order = product.Artifacts.Count() + 1;
        product.Artifacts.Add(item);
    }

    private void DeleteArtifact(Artifact item)
    {
        product.Artifacts.Remove(item);
    }

    private void UploadArtifact(Artifact item)
    {
        // Shows the popup at the center of the screen
        showFileModal = true;
        artifactInfo.Artifact = item;
    }

    private void CancelProduct()
    {
        navigation.NavigateTo("/");
    }

    private async Task Save()
    {
        if (product.id == null)
        {
            await http.PostAsJsonAsync("api/products", product);
        }
        else
        {
            await http.PutAsJsonAsync("api/products", product);
        }
        //navigation.NavigateTo("/");
    }

    private void CloseFileModal()
    {
        showFileModal = false;
    }

    private async Task FileFromModal()
    {
        showFileModal = false;
        artifactInfo.Artifact.Uri = artifactInfo.Key;
        artifactInfo.Artifact.FileName = artifactInfo.FileName;
        await Save();
    }
}